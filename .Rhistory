depth_11m = Temp11,
depth_12m = Temp12,
depth_13m = Temp13,
depth_14m = Temp14,
depth_15m = Temp15,
depth_16m = Temp16,
depth_17m = Temp17,
depth_18m = Temp18,
depth_19m = Temp19,
depth_20m = Temp20,
depth_21m = Temp21,
depth_22m = Temp22,
depth_23m = Temp23,
depth_24m = Temp24,
depth_25m = Temp25,
depth_26m = Temp26,
depth_27m = Temp27,
depth_28m = Temp28,
depth_29m = Temp29,
depth_31m = Temp30,
depth_33m = Temp31,
depth_35m = Temp32,
depth_37m = Temp33,
depth_39m = Temp34,
depth_41m = Temp35,
depth_43m = Temp36,
depth_45m = Temp37,
depth_47m = Temp38) %>%
pivot_longer(!timestamp,
names_to = "var",
values_to = "degC") %>%
mutate(depth_m = var %>%
substr(7, 8) %>%
as.numeric())
plot2 <- valcour_watertemp %>%
ggplot() +
geom_tile(aes(x = timestamp,
y = depth_m,
fill = degC)) +
scale_fill_viridis("Temperature (deg C)",
option = "plasma") +
scale_y_reverse() +
labs(x = "",
y = "Depth below water surface (m)")
ggplotly(plot2)
?render
render("data_site_writer.Rmd",
"html_document")
devtools::install_github('rstudio/rmarkdown')
install.packages("devtools")
install.packages("devtools")
library(installr)
install.packages("installr")
install.pandoc()
??pandoc
library(installr)
install.pandoc()
render("data_site_writer.Rmd",
"html_document")
library(rmarkdown)
render("data_site_writer.Rmd",
"html_document")
pandoc_version()
render("data_site_writer.Rmd",
"html_document")
?render
render("data_site_writer.Rmd",
output_format = "html_document",
output_dir = "//lcbp-server2012/data/MVaughan/lcbuoys")
render("data_site_writer.Rmd",
output_format = "html_document",
output_dir = "C:/Users/mvaughan/Documents")
render("data_site_writer.Rmd",
output_format = "html_document")
installed.packages()
R.home()
installed.packages() %>%
write_csv("20210720_installed_packages.csv")
installed.packages() %>%
tibble() %>%
write_csv("20210720_installed_packages.csv")
render("data_site_writer.Rmd",
output_format = "html_document")
install.packages(c("tidyverse",))
install.packages(c("tidyverse","RCurl","lubridate","viridis","scales","plotly","rmarkdown"))
render("data_site_writer.Rmd",
output_format = "html_document")
library(RCurl)
library(tidyverse)
library(lubridate)
library(viridis)
library(scales)
library(plotly)
library(rmarkdown)
render("data_site_writer.Rmd",
output_format = "html_document")
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
library(tidyverse)
library(lubridate)
library(viridis)
library(scales)
library(plotly)
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
valcour_watertemp <- valcour %>%
select(c(timestamp, starts_with("Temp"))) %>% # select only timestamp and TempXY columns
rename(depth_01m = Temp01,
depth_02m = Temp02,
depth_03m = Temp03,
depth_04m = Temp04,
depth_05m = Temp05,
depth_06m = Temp06,
depth_07m = Temp07,
depth_08m = Temp08,
depth_09m = Temp09,
depth_10m = Temp10,
depth_11m = Temp11,
depth_12m = Temp12,
depth_13m = Temp13,
depth_14m = Temp14,
depth_15m = Temp15,
depth_16m = Temp16,
depth_17m = Temp17,
depth_18m = Temp18,
depth_19m = Temp19,
depth_20m = Temp20,
depth_21m = Temp21,
depth_22m = Temp22,
depth_23m = Temp23,
depth_24m = Temp24,
depth_25m = Temp25,
depth_26m = Temp26,
depth_27m = Temp27,
depth_28m = Temp28,
depth_29m = Temp29,
depth_31m = Temp30,
depth_33m = Temp31,
depth_35m = Temp32,
depth_37m = Temp33,
depth_39m = Temp34,
depth_41m = Temp35,
depth_43m = Temp36,
depth_45m = Temp37,
depth_47m = Temp38) %>%
pivot_longer(!timestamp,
names_to = "var",
values_to = "degC") %>%
mutate(depth_m = var %>%
substr(7, 8) %>%
as.numeric())
plot2 <- valcour_watertemp %>%
ggplot() +
geom_tile(aes(x = timestamp,
y = depth_m,
fill = degC)) +
scale_fill_viridis("Temperature (deg C)",
option = "plasma") +
scale_y_reverse() +
labs(x = "",
y = "Depth below water surface (m)")
ggplotly(plot2)
library(RCurl)
library(tidyverse)
library(lubridate)
library(viridis)
library(scales)
library(plotly)
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
View(valcour)
?library
.libPaths()
my_paths <- .libPaths()
my_paths[1] <- "C:/Users/mvaughan/Documents/R_package_library"
.libsPaths(my_paths)
.libPaths(my_paths)
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
my_paths <- .libPaths()
my_paths[1] <- "C:/Users/mvaughan/Documents/R_package_library"
.libPaths(my_paths)
install.packages("ellipsis")
my_paths <- .libPaths()
my_paths[1] <- "C:/Users/mvaughan/Documents/R_package_library"
.libPaths(my_paths)
library(RCurl)
library(tidyverse)
install.packages("tidyverse")
my_paths <- .libPaths()
my_paths[1] <- "C:/Users/mvaughan/Documents/R_package_library"
.libPaths(my_paths)
library(RCurl)
library(tidyverse)
install.packages("fansi")
my_paths <- .libPaths()
my_paths[1] <- "C:/Users/mvaughan/Documents/R_package_library"
.libPaths(my_paths)
library(RCurl)
library(tidyverse)
install.packages("utf8")
my_paths <- .libPaths()
my_paths[1] <- "C:/Users/mvaughan/Documents/R_package_library"
.libPaths(my_paths)
library(RCurl)
library(tidyverse)
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
library(tidyverse)
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
.libPaths()
library(RCurl)
library(tidyverse)
library(lubridate)
library(viridis)
library(scales)
library(plotly)
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
valcour_watertemp <- valcour %>%
select(c(timestamp, starts_with("Temp"))) %>% # select only timestamp and TempXY columns
rename(depth_01m = Temp01,
depth_02m = Temp02,
depth_03m = Temp03,
depth_04m = Temp04,
depth_05m = Temp05,
depth_06m = Temp06,
depth_07m = Temp07,
depth_08m = Temp08,
depth_09m = Temp09,
depth_10m = Temp10,
depth_11m = Temp11,
depth_12m = Temp12,
depth_13m = Temp13,
depth_14m = Temp14,
depth_15m = Temp15,
depth_16m = Temp16,
depth_17m = Temp17,
depth_18m = Temp18,
depth_19m = Temp19,
depth_20m = Temp20,
depth_21m = Temp21,
depth_22m = Temp22,
depth_23m = Temp23,
depth_24m = Temp24,
depth_25m = Temp25,
depth_26m = Temp26,
depth_27m = Temp27,
depth_28m = Temp28,
depth_29m = Temp29,
depth_31m = Temp30,
depth_33m = Temp31,
depth_35m = Temp32,
depth_37m = Temp33,
depth_39m = Temp34,
depth_41m = Temp35,
depth_43m = Temp36,
depth_45m = Temp37,
depth_47m = Temp38) %>%
pivot_longer(!timestamp,
names_to = "var",
values_to = "degC") %>%
mutate(depth_m = var %>%
substr(7, 8) %>%
as.numeric())
plot2 <- valcour_watertemp %>%
ggplot() +
geom_tile(aes(x = timestamp,
y = depth_m,
fill = degC)) +
scale_fill_viridis("Temperature (deg C)",
option = "plasma") +
scale_y_reverse() +
labs(x = "",
y = "Depth below water surface (m)")
ggplotly(plot2)
install.packages("rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
sessionInfo()
pandoc_available()
knitr::knit2html("data_site_writer.knit.md")
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
render("data_site_writer.knit.md",
output_format = "html_document")
library(rmarkdown)
render("data_site_writer.knit.md",
output_format = "html_document")
rmarkdown::render(input = 'data_site_writer.Rmd', output_file = 'file.md',
output_format = md_document( ) )
render("data_site_writer.Rmd",
output_format = "html_document")
session_info()
sessionInfo()
sessionInfo()
pandoc_version()
pandoc_available()
knit2html("data_site_writer.md")
knitr::knit2html("data_site_writer.md")
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
valcour_watertemp <- valcour %>%
select(c(timestamp, starts_with("Temp"))) %>% # select only timestamp and TempXY columns
rename(depth_01m = Temp01,
depth_02m = Temp02,
depth_03m = Temp03,
depth_04m = Temp04,
depth_05m = Temp05,
depth_06m = Temp06,
depth_07m = Temp07,
depth_08m = Temp08,
depth_09m = Temp09,
depth_10m = Temp10,
depth_11m = Temp11,
depth_12m = Temp12,
depth_13m = Temp13,
depth_14m = Temp14,
depth_15m = Temp15,
depth_16m = Temp16,
depth_17m = Temp17,
depth_18m = Temp18,
depth_19m = Temp19,
depth_20m = Temp20,
depth_21m = Temp21,
depth_22m = Temp22,
depth_23m = Temp23,
depth_24m = Temp24,
depth_25m = Temp25,
depth_26m = Temp26,
depth_27m = Temp27,
depth_28m = Temp28,
depth_29m = Temp29,
depth_31m = Temp30,
depth_33m = Temp31,
depth_35m = Temp32,
depth_37m = Temp33,
depth_39m = Temp34,
depth_41m = Temp35,
depth_43m = Temp36,
depth_45m = Temp37,
depth_47m = Temp38) %>%
pivot_longer(!timestamp,
names_to = "var",
values_to = "degC") %>%
mutate(depth_m = var %>%
substr(7, 8) %>%
as.numeric())
plot2 <- valcour_watertemp %>%
ggplot() +
geom_tile(aes(x = timestamp,
y = depth_m,
fill = degC)) +
scale_fill_viridis("Temperature\n(deg C)",
option = "plasma") +
scale_y_reverse() +
labs(x = "",
y = "Depth below water surface (m)")
ggplotly(plot2)
?ggplotly
install.packages("rmdformats")
render("data_site_writer.Rmd",
output_format = downcute())
library(rmdformats)
render("data_site_writer.Rmd",
output_format = downcute())
render("data_site_writer.Rmd",
output_format = downcute(self_contained = FALSE))
render("data_site_writer.Rmd",
output_format = "html_document")
render("data_site_writer.Rmd")
library(RCurl)
library(tidyverse)
library(lubridate)
library(viridis)
library(plotly)
valcour_url <- "ftp://02d0c8c.netsolhost.com/valcour_pushed_data.csv"
userpwd <- "lcbp_data:Data123"
valcour <- getURL(valcour_url,
userpwd = userpwd) %>%
read_csv(skip = 1) %>%
rename(timestamp = `Time America/New_York UTC-04:00`) %>%
drop_na() %>%
mutate(timestamp = mdy_hms(timestamp)) %>%
mutate_if(is.character, as.numeric) %>% # convert all those characters to numeric
filter(timestamp > ymd_hms("2021-06-24 00:00:00"))
valcour_watertemp <- valcour %>%
select(c(timestamp, starts_with("Temp"))) %>% # select only timestamp and TempXY columns
rename(depth_01m = Temp00,
depth_02m = Temp01,
depth_03m = Temp02,
depth_04m = Temp03,
depth_05m = Temp04,
depth_06m = Temp05,
depth_07m = Temp06,
depth_08m = Temp07,
depth_09m = Temp08,
depth_10m = Temp09,
depth_11m = Temp10,
depth_12m = Temp11,
depth_13m = Temp12,
depth_14m = Temp13,
depth_15m = Temp14,
depth_16m = Temp15,
depth_17m = Temp16,
depth_18m = Temp17,
depth_19m = Temp18,
depth_20m = Temp19,
depth_21m = Temp20,
depth_22m = Temp21,
depth_23m = Temp22,
depth_24m = Temp23,
depth_25m = Temp24,
depth_26m = Temp25,
depth_27m = Temp26,
depth_28m = Temp27,
depth_29m = Temp28,
depth_31m = Temp29,
depth_33m = Temp30,
depth_35m = Temp31,
depth_37m = Temp32,
depth_39m = Temp33,
depth_41m = Temp34,
depth_43m = Temp35,
depth_45m = Temp36,
depth_47m = Temp37,
depth_49m = Temp38) %>%
pivot_longer(!timestamp,
names_to = "var",
values_to = "degC") %>%
mutate(depth_m = var %>%
substr(7, 8) %>%
as.numeric())
plot2 <- valcour_watertemp %>%
ggplot() +
geom_tile(aes(x = timestamp,
y = depth_m,
fill = degC)) +
scale_fill_viridis("Temperature\n(deg C)",
option = "plasma") +
scale_y_reverse() +
labs(x = "",
y = "Depth below water surface (m)")
ggplotly(plot2)
render("data_site/data_site.Rmd")
library(rmarkdown)
render("data_site/data_site.Rmd")
