direction = -1) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = as.Date(origin = "1970-01-01")) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = as.Date(timestamp, origin = "1970-01-01")) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = as_date(timestamp, origin = "1970-01-01")) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = as_date) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = as_date()) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = as_date) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = date) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
?date
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = lubridate::date) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = date(origin = "1970-01-01")) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
date_labeller <- function(x){
as.Date(x, origin = '1970-01-01') %>%
date()
}
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = date_labeller) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
date_labeller <- function(x){
as.Date(x, origin = '1970-01-01') %>%
}
date_labeller <- function(x){
as.Date(x, origin = '1970-01-01')
}
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = date_labeller) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
last24_valcour_watertemp_plot
date_labeller <- function(x){
as.Date(x, origin = '1970-01-01') %>%
format(format = "%Y-%m-%d")
}
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = date_labeller) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = as.POSIXct) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
date_labeller <- function(x){
as.POSIXct(x, origin = '1970-01-01')
}
timestamp_labeller <- function(x){
as.POSIXct(x, origin = '1970-01-01')
}
last24_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = timestamp_labeller) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
timestamp_labeller <- function(x){
as.POSIXct(x, origin = '1970-01-01') %>%
format("%m-%d")
}
last_week_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = timestamp_labeller) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
timestamp_labeller <- function(x){
as.POSIXct(x, origin = '1970-01-01') %>%
date()
}
last_week_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = timestamp_labeller) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
timestamp_labeller <- function(x){
date(as.POSIXct(x, origin = '1970-01-01'))
}
last_week_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(7, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = timestamp_labeller) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
(latest_timestamp - duration(7, units = "days"))
(latest_timestamp - duration(7, units = "days")) %>% date()
((latest_timestamp - duration(day_window, units = "days")) %>% date()) : (latest_timestamp %>% date())
# enter number of days to look back:
day_window <- 7
# enter number of days to look back:
((latest_timestamp - duration(day_window, units = "days")) %>% date()) : (latest_timestamp %>% date())
dbreaks <- ((latest_timestamp - duration(day_window, units = "days")) %>% date()) : (latest_timestamp %>% date())
day_window <- 7
timestamp_labeller <- function(x){
as.POSIXct(x, origin = '1970-01-01')
}
latest_timestamp %>%
date()
dbreaks <- ((latest_timestamp - duration(day_window, units = "days")) %>% date()) : (latest_timestamp %>% date())
last_week_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(day_window, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = timestamp_labeller,
breaks = dbreaks) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
dbreaks
as_date(dbreaks)
dbreaks <- ((latest_timestamp - duration(day_window, units = "days")) %>% date()) : (latest_timestamp %>% date()) %>%
as_date()
dbreaks
# enter number of days to look back:
day_window <- 7
timestamp_labeller <- function(x){
as.POSIXct(x, origin = '1970-01-01')
}
latest_timestamp %>%
date()
dbreaks <- ((latest_timestamp - duration(day_window, units = "days")) %>% date()) : (latest_timestamp %>% date()) %>%
as_date()
last_week_valcour_watertemp_plot <- valcour_watertemp %>%
filter(timestamp > (latest_timestamp - duration(day_window, units = "days"))) %>%
ggplot() +
geom_line(aes(x = degC,
y = depth_m,
color = timestamp,
group = timestamp),
alpha = 0.4,
size = 1) +
scale_y_reverse() +
scale_color_viridis(option = "magma",
direction = -1,
labels = timestamp_labeller,
breaks = dbreaks) +
labs(x = "Temperature (deg C)",
y = "Depth below water surface (m)")
ggplotly(last24_valcour_watertemp_plot)
lib_paths <- .libPaths()   # extract both paths
new_paths <- c("C:/Users/mvaughan/Documents/R_package_library", lib_paths [2])  # change order
.libPaths(new_paths)  # modify
library(rmarkdown)
library(rmdformats)
render("data_site/data_site.Rmd")
render("data_site/lcbuoy_data.Rmd")
render("data_site/lcbuoy_data.Rmd")
render("data_site/lcbuoy_data.Rmd")
render("data_site/lcbuoy_data.Rmd")
?render
render("data_site/lcbuoy_data.Rmd",
output_file = "data_site/index.html")
render("lcbuoy_data.Rmd",
output_file = "data_site/index.html")
render("lcbuoy_data.Rmd",
output_file = "index.html")
lib_paths <- .libPaths()   # extract both paths
new_paths <- c("C:/Users/mvaughan/Documents/R_package_library", lib_paths [2])  # change order
.libPaths(new_paths)  # modify
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
tp_data <- "data/tp_data.csv" %>%
read_csv()
ltm_data <- "data/20210226_LTM_lake_data.csv" %>%
read_csv()
ltm_data %>%
pull("station") %>%
unique() %>%
arrange()
ltm_data %>%
pull("station") %>%
unique() %>%
str_order()
ltm_data %>%
pull("station") %>%
unique() %>%
str_sort()
names(ltm_data)
ltm_data %>%
pull("param") %>%
unique() %>%
str_sort()
View(ltm_data)
View(ltm_data)
View(ltm_data)
library(mapboxapi)
library(leaflet)
# create the map
ltm_station_info %>%
leaflet() %>%
addProviderTiles("Esri.WorldImagery") %>%
# addPolygons(data = subbasins_poly) %>%
addMarkers(lng = ~lng,
lat = ~lat,
label = ~station)
ltm_station_info <- "20210226_lake_station_info.csv" %>%
read_csv()
ltm_station_info <- "data/20210226_lake_station_info.csv" %>%
read_csv()
ltm_station_info <- "data/20210226_lake_station_info.csv" %>%
read_csv()
getwd()
# Chunk 1: setup
library(tidyverse)
library(plotly)
knitr::opts_chunk$set(echo = FALSE)
tp_data <- "data/tp_data.csv" %>%
read_csv()
ltm_data <- "data/20210226_LTM_lake_data.csv" %>%
read_csv()
ltm_station_info <- "data/20210226_lake_station_info.csv" %>%
read_csv()
# Chunk 2
selectInput("station",
label = "Monitoring site",
choices = ltm_data %>%
pull("station") %>%
unique() %>%
str_sort())
selectInput("param",
label = "Parameter",
choices = ltm_data %>%
pull("param") %>%
unique() %>%
str_sort())
checkboxInput('smooth', 'Trend line', value = TRUE)
# Chunk 3: plot
plotdata <- reactive({
ltm_data %>%
filter(station == input$station) %>%
filter(param == input$param)
})
renderPlotly({
p <- plotdata() %>%
ggplot(aes(x = date,
y = value)) +
geom_point(aes(color = stratum),
size = 3,
alpha = 0.5) +
labs(title = paste0(input$station, " - ", input$param),
x = "",
y = "")
if (input$smooth)
p <- p+ geom_smooth()
ggplotly(p)
})
# load mapping packages
library(mapboxapi)
library(leaflet)
station_loc <- reactive({
ltm_station_info %>%
mutate(selected = case_when(
station == input$station ~ "yes",
TRUE ~ "no"
))
})
# create the map
station_loc() %>%
leaflet() %>%
addProviderTiles("Esri.WorldImagery") %>%
# addPolygons(data = subbasins_poly) %>%
addCircleMarkers(lng = ~lng,
lat = ~lat,
label = ~station)
station_loc <- reactive({
ltm_station_info %>%
mutate(selected = case_when(
station == input$station ~ "yes",
TRUE ~ "no"
))
})
input
ltm_station_info <- "data/20210226_lake_station_info.csv" %>%
read_csv()
ltm_data <- "data/20210226_LTM_lake_data.csv" %>%
read_csv()
lib_paths <- .libPaths()   # extract both paths
new_paths <- c("C:/Users/mvaughan/Documents/R_package_library", lib_paths [2])  # change order
.libPaths(new_paths)  # modify
library(rmarkdown)
library(rmdformats)
# Render the RMarkdown file
render("lcbuoy_data.Rmd",
output_file = "index.html")
